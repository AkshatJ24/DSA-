# Binary Search
## Day 11

### Binary Search
#### Recursive Approach
```java
class Solution {
    public int search(int[] nums, int target) {
        int n = nums.length;
        int low = 0;
        int high = n - 1;
        return binarysearch(nums, low, high, target); 
    }

    public int binarysearch(int[] nums, int low, int high, int target) {
        if (low > high) {
            return -1;
        }
        
        int mid = low + (high - low) / 2; 

        if (nums[mid] == target) {
            return mid;
        } else if (nums[mid] > target) { 
            return binarysearch(nums, low, mid - 1, target);
        } else { 
            return binarysearch(nums, mid + 1, high, target);
        }
    }
}
```
#### Iterative Approach
```java
class Solution {
    public int search(int[] nums, int target) {
        int n = nums.length;
        int low = 0;
        int high = n-1;
        
        while(low <= high){
            int mid = (low + high) / 2;
            if(nums[mid] == target){
                return mid;
            } else if (target > nums[mid]){
                low = mid + 1;
            } else {
                high = mid-1;
            }
        }
        return -1;
    }
}
```
